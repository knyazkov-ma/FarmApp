@model FarmCropViewModel
@using FarmApp.ViewModels;

@{
    ViewBag.Title = "Добавление фермы";

    IEnumerable<NamedItemViewModel> regions = ViewBag.Regions;
    IEnumerable<NamedItemViewModel> farmers = ViewBag.Farmers;
    IEnumerable<NamedItemViewModel> agricultures = ViewBag.Agricultures;
}

<h2>Добавление фермы</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FarmerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(
                    model => model.FarmerId,
                    new SelectList(farmers, "Id", "Name"),
                    "-- Выберите фермера --", htmlAttributes: new { @class = "form-control" }
                )
                @Html.ValidationMessageFor(model => model.FarmerId, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.DropDownListFor(
                    model => model.RegionId,
                    new SelectList(regions, "Id", "Name"),
                    "-- Выберите регион --", htmlAttributes: new { @class = "form-control" }
                )
                @Html.ValidationMessageFor(model => model.RegionId, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AgricultureId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(
                     model => model.AgricultureId,
                     new SelectList(agricultures, "Id", "Name"),
                     "-- Выберите с/х культуру --", htmlAttributes: new { @class = "form-control" }
                )
                @Html.ValidationMessageFor(model => model.AgricultureId, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gather, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                @Html.EditorFor(model => model.Gather, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gather, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Назад к списку ферм", "List", null, new { @class = "btn btn-default", @role = "button" })
                <button type="submit" class="btn btn-primary btn-success">Создать</button>
            </div>
        </div>
    </div>
}